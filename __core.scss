@mixin core_columns {
	.#{$row-default-classname} {
		display: table; /* Remove the white space between each column on the Stock Android Jellybean Browser */
		display: block\9; /* Internet Explorer 9 fix for calc function on element with table display property */
		font-size: 0; /* Remove the white space between columns */
		text-align: left; /* Prevent columns from aligning to center or right when a parent element has the text-align property */
		direction: ltr;
		table-layout: fixed;
		width: 100%;

		> [class*="col"] {
			vertical-align: top;
			display: inline-block;
			width: 100%;
			text-align: left;
		}

		> * {
			@include responsive-font-size('default-font-size');
		}
	}

	.#{$row-default-classname}--reverse {
		direction: rtl;

		> [class*="#{$column-default-classname}"] {
			direction: ltr;
		}
	}

	.#{$row-default-classname}--right {
		text-align: right;
	}

	.#{$row-default-classname}--center {
		text-align: center;
	}

	.#{$row-default-classname}--middle {
		> [class*="#{$column-default-classname}"] {
			vertical-align: middle;
		}
	}

	.#{$row-default-classname}--bottom {
		> [class*="#{$column-default-classname}"] {
			vertical-align: bottom;
		}
	}

	@include columns(
		$selector: null,
		$horizontal-gutter: $column-default-horizontal-gutter,
		$vertical-gutter: $column-default-vertical-gutter,
		$column-count: $column-default-count,
		$push: $push-by-default,
		$pull: $pull-by-default
	);

	@if $specific-columns-for-smartphone != false
	{
		@include breakpoint(
			$min-width: false,
			$max-width: $smartphone-max-width
		)
		{
			@include columns(
				$selector: null,
				$prefix: 's',
				$push: $push-by-default,
				$pull: $pull-by-default
			);
		}
	}

	@if $specific-columns-for-phablet != false
	{
		@include breakpoint(
			$min-width: $phablet-min-width,
			$max-width: $phablet-max-width
		)
		{
			@include columns(
				$selector: null,
				$prefix: 'p',
				$push: $push-by-default,
				$pull: $pull-by-default
			);
		}
	}

	@if $specific-columns-for-tablet != false
	{
		@include breakpoint(
			$min-width: $tablet-min-width,
			$max-width: $tablet-max-width
		)
		{
			@include columns(
				$selector: null,
				$prefix: 't',
				$push: $push-by-default,
				$pull: $pull-by-default
			);
		}
	}

	@if $specific-columns-for-tablet-landscape != false
	{
		@include breakpoint(
			$min-width: $tablet-landscape-min-width,
			$max-width: $tablet-landscape-max-width
		)
		{
			@include columns(
				$selector: null,
				$prefix: 'tl',
				$push: $push-by-default,
				$pull: $pull-by-default
			);
		}
	}

	@if $specific-columns-for-desktop != false
	{
		@include breakpoint(
			$min-width: $desktop-min-width,
			$max-width: $desktop-max-width
		)
		{
			@include columns(
				$selector: null,
				$prefix: 'd',
				$push: $push-by-default,
				$pull: $pull-by-default
			);
		}
	}

	@if $specific-columns-for-widescreen != false
	{
		@include breakpoint(
			$min-width: $widescreen-min-width,
			$max-width: $widescreen-max-width
		)
		{
			@include columns(
				$selector: null,
				$prefix: 'w',
				$push: $push-by-default,
				$pull: $pull-by-default
			);
		}
	}

	@if $specific-columns-for-highroller != false
	{
		@include breakpoint(
			$min-width: $highroller-min-width,
			$max-width: $highroller-max-width
		)
		{
			@include columns(
				$selector: null,
				$prefix: 'h',
				$push: $push-by-default,
				$pull: $pull-by-default
			);
		}
	}
}